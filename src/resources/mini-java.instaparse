goal               : main-class ( class-declaration )*
                   ;

main-class         : <"class"> class-id <"{"> main-body <"}">
                   ;

main-body          : main-method
                   ;

main-method        : <main-boilerplate> <"{"> stat <"}">
                   ;

main-boilerplate   : "public" "static" "void" "main" "("
                         "String" "[" "]" var-id ")"
                   ;

class-declaration  : <"class"> class-id class-extends <"{">
                         ( var-declaration )*
                         ( method-declaration )*
                     <"}">
                   ;

class-extends      : ( <"extends"> class-id )?
                   ;

var-declaration    : type var-id <";">
                   ;

method-declaration : <"public"> return-type id declare-arg-list <"{">
                         ( var-declaration )*
                         ( stat )*
                         return-stat
                     <"}">
                   ;

return-type        : type
                   ;

parameter-type     : type
                   ;

type               : int-array-type
                   | bool-type
                   | int-type
                   | id
                   ;

int-array-type     : <"int" "[" "]">
                   ;

bool-type          : <"boolean">
                   ;

int-type           : <"int">
                   ;

stat               : <"{"> ( stat )* <"}">
                   | if-stat
                   | while-stat
                   | print-stat
                   | assign-stat
                   | assign-array-stat
                   ;

if-stat            : <"if" "("> exp <")">
                         stat
                     <"else">
                         stat
                   ;

while-stat         : <"while" "("> exp <")">
                         stat
                   ;

print-stat         : <"System.out.println" "("> exp <")" ";">
                   ;

assign-stat        : var-id <"="> exp <";">
                   ;



return-stat        : <"return"> exp <";">
                   ;


exp                : bin-op-exp
                   | array-access
                   | array-length
                   | method-call
                   | recur-exp
                   | int-lit
                   | true
                   | false
                   | id
                   | this
                   | array-create
                   | constructor-call
                   | not-exp
                   | paren-exp
                   ;

<bin-op-exp>       : and-exp
                   | lt-exp
                   | add-exp
                   | sub-exp
                   | mul-exp
                   ;

array-access       : exp <"["> array-index <"]">
                   ;

array-length       : exp <"." "length">
                   ;

array-create       : <"new" "int" "["> exp <"]">
                   ;

assign-array-stat  : var-id <"["> array-index <"]" "="> exp <";">
                   ;

array-index        : exp
                   ;

method-call        : exp <"."> method-id call-arg-list
                   ;

constructor-call   : <"new"> class-id <"(" ")">
                   ;

not-exp            : <"!"> exp
                   ;

paren-exp          : <"("> exp <")">
                   ;

declare-arg-list   : <"("> ( parameter-type var-id
                               ( <","> parameter-type var-id )* )? <")">
                   ;

call-arg-list      : <"("> ( exp
                               ( <","> exp )* )? <")">
                   ;

and-exp            : exp <"&&"> exp
                   ;

lt-exp             : exp <"<"> exp
                   ;

add-exp            : exp <"+"> exp
                   ;

sub-exp            : exp <"-"> exp
                   ;

mul-exp            : exp <"*"> exp
                   ;

recur-exp          : <"recur"> call-arg-list
                   ;

class-id           : id
                   ;

method-id          : id
                   ;

var-id             : id
                   ;

id                 : #'[a-zA-Z_][a-zA-Z0-9_]*'
                   ;

int-lit            : "0"
                   | #'[1-9][0-9]*'
                   ;

this               : <"this">
                   ;

true               : <"true">
                   ;

false              : <"false">
                   ;