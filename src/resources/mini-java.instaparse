goal               :  main-class ( class-declaration )*
                   ;

main-class         : "class" id <"{">
                         "public" "static" "void" "main" "("
                             "String" "[" "]" id ")" <"{">
                                 stat
                             <"}">
                     <"}">
                   ;

class-declaration  : "class" id ( "extends" id )? <"{">
                         ( var-declaration )*
                         ( method-declaration )*
                     <"}">
                   ;

var-declaration    : type id <";">
                   ;

method-declaration : "public" type id "("
                         ( type id ( "," type id )* )? ")" <"{">
                             ( var-declaration )*
                             ( stat )*
                             "return" exp <";">
                     <"}">
                   ;

type               : int-array-type
                   | bool-type
                   | int-type
                   | id
                   ;

int-array-type     : <"int" "[" "]">
                   ;

bool-type          : <"boolean">
                   ;

int-type           : <"int">
                   ;

stat               : <"{"> ( stat )* <"}">
                   | if-stat
                   | while-stat
                   | print-stat
                   | assign-stat
                   | assign-array-stat
                   | recur-stat
                   ;

if-stat            : <"if"> <"("> exp <")">
                         stat
                     <"else">
                         stat
                   ;

while-stat         : <"while"> <"("> exp <")">
                         stat
                   ;

print-stat         : <"System.out.println"> <"("> exp <")"> <";">
                   ;

assign-stat        : id <"="> exp <";">
                   ;

assign-array-stat  : id <"["> exp <"]"> <"="> exp <";">
                   ;

return-stat        : "return" exp ";"
                   ;

recur-stat         : "recur" "("
                         ( exp ( "," exp )* )?
                     ")"

exp                : bin-op-exp
                   | array-access
                   | array-length
                   | method-call
                   | int-lit
                   | "true"
                   | "false"
                   | id
                   | "this"
                   | array-create
                   | constructor-call
                   | "!" exp
                   | "(" exp ")"
                   ;

<bin-op-exp>       : and-exp
                   | lt-exp
                   | add-exp
                   | sub-exp
                   | mul-exp
                   | div-exp
                   ;

array-access       : exp "[" exp "]"
                   ;

array-length       : exp "." "length"
                   ;

array-create       : "new" "int" "[" exp "]"
                   ;

method-call        : exp "." id "("
                         ( exp ( "," exp )* )?
                     ")"
                   ;

constructor-call   : "new" id "(" ")"
                   ;

and-exp            : exp <"&&"> exp
                   ;

lt-exp             : exp <"<"> exp
                   ;

add-exp            : exp <"+"> exp
                   ;

sub-exp            : exp <"-"> exp
                   ;

mul-exp            : exp <"*"> exp
                   ;

div-exp            : exp <"/"> exp
                   ;

id                 : #'[a-zA-Z_][a-zA-Z0-9_]*'
                   ;

int-lit            : "0"
                   | #'[1-9][0-9]*'
                   ;